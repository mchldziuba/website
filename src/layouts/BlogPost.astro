---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Container from '../components/Container.astro';
import Share from '../components/Share.astro';
import ScrollTop from '../components/ScrollTop.astro';
import { getCollection } from 'astro:content';
import BlogPostCard from '../components/BlogPostCard.astro';

type Props = CollectionEntry<'blog'>['data'] & { readTime: string };

const { title, description, pubDate, heroImage, readTime } = Astro.props;

const relatedPosts = (await getCollection('blog'))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.slice(0, 3);
---
<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>
	<body>
		<ScrollTop />
		<Header />
		<main class="pt-16 md:pt-28">
		<Container>
			<article class="blogpost">
				<div class="not-prose md:text-base">
					<span class="text-primary font-semibold">GUIDE</span>
					<h1 class="font-bold text-3xl lg:text-5xl mt-4 whitespace-normal leading-tight">{title}</h1>
				</div>
				<div>
					<p>{description}</p>
				</div>

				<div class="flex justify-between items-center not-prose md:text-base">
					<div class="flex gap-3 items-center">
						<div class="w-11 h-11 bg-slate-800 rounded-full"></div>
						<div class="flex flex-col">
							<span class="font-medium">Michał Dziuba</span>
							<span class="text-sm text-slate-500"><FormattedDate date={pubDate} /> · {readTime}</span>
						</div>
					</div>

					<Share />
				</div>
				<div>
					{heroImage && <img class="w-full rounded-lg" width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div>
					<slot />
				</div>
			</article>
		</Container>
		</main>

		<section class="bg-accent/20 w-full py-24 my-24">
			<Container>
				<h1 class="font-semibold text-xl md:text-2xl">
					Another posts
				</h1>
				<div class="mt-8 grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-7">
					{
						relatedPosts.map((post) => (
							<div class="md:last:hidden xl:last:block">
								<BlogPostCard
									title={post.data.title}
									description={post.data.description}
									pubDate={post.data.pubDate}
									heroImage={post.data.heroImage}
									slug={post.slug} 
								/>
							</div>
						))
					}
				</div>
			</Container>
		</section>
		<Footer />
	</body>
</html>
